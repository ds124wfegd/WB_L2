package main

func main() {
	ch := make(chan int) // небуферизованный канал: операция отправки блокируется, пока другая горутина не готова принять данные
	go func() {
		defer close(ch) // для недопущения deadlock добавить эту строку
		for i := 0; i < 10; i++ {
			ch <- i // последовательно отправляет числа 0 ... 9 в канал
		}
	}()
	for n := range ch {
		println(n)
	}
}

/*
0
1
2
3
4
5
6
7
8
9
fatal error: all goroutines are asleep - deadlock!
*/

/*
горутина-отправитель завершила работу после отправки 10 чисел, но

канал не закрыт, поэтому цикл range в main продолжает ждать.

все горутины либо завершились, либо заблокированы, но main ждет данные из канала, возникает deadlock

=> для решения отправитель должен закрыть канал
*/
